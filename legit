--retarded legit script

function reset() local v1={[1]=game:GetService("Players").LocalPlayer.Backpack.Punch,[3]=true,[4]=true};game:GetService("ReplicatedStorage").Touch1:FireServer(unpack(v1));end local v0=game:GetService("Players").LocalPlayer.Character;game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(v2) v0=v2;end);game:GetService("UserInputService").InputBegan:Connect(function(v3,v4) if ( not v4 and (v3.KeyCode==Enum.KeyCode.R)) then game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Dead);game:GetService("Players").LocalPlayer.Character:BreakJoints();reset();local v5=v0.HumanoidRootPart.CFrame;game:GetService("Players").LocalPlayer.CharacterAdded:Wait();for v6=1,50 do task.wait();v0:WaitForChild("HumanoidRootPart");end end end);game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
    if key == "r" then
                         game.Players.LocalPlayer.Character.Humanoid.Health = 0
    end
   end)
local amount = fovamount

game:GetService'Workspace'.Camera.FieldOfView = 100
rpm = 1
game:GetService('RunService').RenderStepped:connect(function()
    for i=1,math.ceil((rpm/60)/60) do
        game.Lighting.TimeOfDay = "14:00:00"
    end
end)
function deseat(instance) 
    for i,v in pairs(instance:GetChildren()) do
    if v:IsA("Seat") then
        v.Parent = game.Lighting
    end
        deseat(v)
    end
end

deseat(game.Workspace) 
game:GetService("Players").LocalPlayer.Chatted:connect(function(msg)

if (string.lower(msg) == "nodoors") then
	local doors = game.Workspace:GetChildren()
for i,v in pairs (doors)do 
	if v.Name == "Door" then
		v:Destroy()
		
	 
	end	
	end
end
end)

game:GetService("StarterGui"):SetCore("SendNotification", {
		    Title = "legit";
		    Text = "script is made by slapped";
			})
game:GetService("StarterGui"):SetCore("SendNotification", {
		    Title = "info";
		    Text = "pressing n means ur fucked";
			})
game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(KeyPressed)
    if KeyPressed == "n" then
        game.Players.LocalPlayer.Character["Right Arm"]:Destroy()
        end
end)

if not _G.Ignore then
    _G.Ignore = {} -- Add Instances to this table to ignore them (e.g. _G.Ignore = {workspace.Map, workspace.Map2})
end
if not _G.WaitPerAmount then
    _G.WaitPerAmount = 500 -- Set Higher or Lower depending on your computer's performance
end
if _G.SendNotifications == nil then
    _G.SendNotifications = true -- Set to false if you don't want notifications
end
if _G.ConsoleLogs == nil then
    _G.ConsoleLogs = false -- Set to true if you want console logs (mainly for debugging)
end



if not game:IsLoaded() then
    repeat
        task.wait()
    until game:IsLoaded()
end
if not _G.Settings then
    _G.Settings = {
        Players = {
            ["Ignore Me"] = true,
            ["Ignore Others"] = true,
            ["Ignore Tools"] = true
        },
        Meshes = {
            NoMesh = false,
            NoTexture = false,
            Destroy = false
        },
        Images = {
            Invisible = true,
            Destroy = false
        },
        Explosions = {
            Smaller = true,
            Invisible = false, -- Not recommended for PVP games
            Destroy = false -- Not recommended for PVP games
        },
        Particles = {
            Invisible = true,
            Destroy = false
        },
        TextLabels = {
            LowerQuality = false,
            Invisible = false,
            Destroy = false
        },
        MeshParts = {
            LowerQuality = true,
            Invisible = false,
            NoTexture = false,
            NoMesh = false,
            Destroy = false
        },
        Other = {
            ["FPS Cap"] = 240, -- Set this true to uncap FPS
            ["No Camera Effects"] = true,
            ["No Clothes"] = true,
            ["Low Water Graphics"] = true,
            ["No Shadows"] = true,
            ["Low Rendering"] = true,
            ["Low Quality Parts"] = true,
            ["Low Quality Models"] = true,
            ["Reset Materials"] = true,
            ["Lower Quality MeshParts"] = true
        }
    }
end
local Players, Lighting, StarterGui, MaterialService = game:GetService("Players"), game:GetService("Lighting"), game:GetService("StarterGui"), game:GetService("MaterialService")
local ME, CanBeEnabled = Players.LocalPlayer, {"ParticleEmitter", "Trail", "Smoke", "Fire", "Sparkles"}
local function PartOfCharacter(Instance)
    for i, v in pairs(Players:GetPlayers()) do
        if v ~= ME and v.Character and Instance:IsDescendantOf(v.Character) then
            return true
        end
    end
    return false
end
local function DescendantOfIgnore(Instance)
    for i, v in pairs(_G.Ignore) do
        if Instance:IsDescendantOf(v) then
            return true
        end
    end
    return false
end
local function CheckIfBad(Instance)
    if not Instance:IsDescendantOf(Players) and (_G.Settings.Players["Ignore Others"] and not PartOfCharacter(Instance) or not _G.Settings.Players["Ignore Others"]) and (_G.Settings.Players["Ignore Me"] and ME.Character and not Instance:IsDescendantOf(ME.Character) or not _G.Settings.Players["Ignore Me"]) and (_G.Settings.Players["Ignore Tools"] and not Instance:IsA("BackpackItem") and not Instance:FindFirstAncestorWhichIsA("BackpackItem") or not _G.Settings.Players["Ignore Tools"])--[[not PartOfCharacter(Instance)]] and (_G.Ignore and not table.find(_G.Ignore, Instance) and not DescendantOfIgnore(Instance) or (not _G.Ignore or type(_G.Ignore) ~= "table" or #_G.Ignore <= 0)) then
        if Instance:IsA("DataModelMesh") then
            if _G.Settings.Meshes.NoMesh and Instance:IsA("SpecialMesh") then
                Instance.MeshId = ""
            end
            if _G.Settings.Meshes.NoTexture and Instance:IsA("SpecialMesh") then
                Instance.TextureId = ""
            end
            if _G.Settings.Meshes.Destroy or _G.Settings["No Meshes"] then
                Instance:Destroy()
            end
        elseif Instance:IsA("FaceInstance") then
            if _G.Settings.Images.Invisible then
                Instance.Transparency = 1
                Instance.Shiny = 1
            end
            if _G.Settings.Images.LowDetail then
                Instance.Shiny = 1
            end
            if _G.Settings.Images.Destroy then
                Instance:Destroy()
            end
        elseif Instance:IsA("ShirtGraphic") then
            if _G.Settings.Images.Invisible then
                Instance.Graphic = ""
            end
            if _G.Settings.Images.Destroy then
                Instance:Destroy()
            end
        elseif table.find(CanBeEnabled, Instance.ClassName) then
            if _G.Settings["Invisible Particles"] or _G.Settings["No Particles"] or (_G.Settings.Other and _G.Settings.Other["Invisible Particles"]) or (_G.Settings.Particles and _G.Settings.Particles.Invisible) then
                Instance.Enabled = false
            end
            if (_G.Settings.Other and _G.Settings.Other["No Particles"]) or (_G.Settings.Particles and _G.Settings.Particles.Destroy) then
                Instance:Destroy()
            end
        elseif Instance:IsA("PostEffect") and (_G.Settings["No Camera Effects"] or (_G.Settings.Other and _G.Settings.Other["No Camera Effects"])) then
            Instance.Enabled = false
        elseif Instance:IsA("Explosion") then
            if _G.Settings["Smaller Explosions"] or (_G.Settings.Other and _G.Settings.Other["Smaller Explosions"]) or (_G.Settings.Explosions and _G.Settings.Explosions.Smaller) then
                Instance.BlastPressure = 1
                Instance.BlastRadius = 1
            end
            if _G.Settings["Invisible Explosions"] or (_G.Settings.Other and _G.Settings.Other["Invisible Explosions"]) or (_G.Settings.Explosions and _G.Settings.Explosions.Invisible) then
                Instance.BlastPressure = 1
                Instance.BlastRadius = 1
                Instance.Visible = false
            end
            if _G.Settings["No Explosions"] or (_G.Settings.Other and _G.Settings.Other["No Explosions"]) or (_G.Settings.Explosions and _G.Settings.Explosions.Destroy) then
                Instance:Destroy()
            end
        elseif Instance:IsA("Clothing") or Instance:IsA("SurfaceAppearance") or Instance:IsA("BaseWrap") then
            if _G.Settings["No Clothes"] or (_G.Settings.Other and _G.Settings.Other["No Clothes"]) then
                Instance:Destroy()
            end
        elseif Instance:IsA("BasePart") and not Instance:IsA("MeshPart") then
            if _G.Settings["Low Quality Parts"] or (_G.Settings.Other and _G.Settings.Other["Low Quality Parts"]) then
                Instance.Material = Enum.Material.Plastic
                Instance.Reflectance = 0
            end
        elseif Instance:IsA("TextLabel") and Instance:IsDescendantOf(workspace) then
            if _G.Settings["Lower Quality TextLabels"] or (_G.Settings.Other and _G.Settings.Other["Lower Quality TextLabels"]) or (_G.Settings.TextLabels and _G.Settings.TextLabels.LowerQuality) then
                Instance.Font = Enum.Font.SourceSans
                Instance.TextScaled = false
                Instance.RichText = false
                Instance.TextSize = 14
            end
            if _G.Settings["Invisible TextLabels"] or (_G.Settings.Other and _G.Settings.Other["Invisible TextLabels"]) or (_G.Settings.TextLabels and _G.Settings.TextLabels.Invisible) then
                Instance.Visible = false
            end
            if _G.Settings["No TextLabels"] or (_G.Settings.Other and _G.Settings.Other["No TextLabels"]) or (_G.Settings.TextLabels and _G.Settings.TextLabels.Destroy) then
                Instance:Destroy()
            end
        elseif Instance:IsA("Model") then
            if _G.Settings["Low Quality Models"] or (_G.Settings.Other and _G.Settings.Other["Low Quality Models"]) then
                Instance.LevelOfDetail = 1
            end
        elseif Instance:IsA("MeshPart") then
            if _G.Settings["Low Quality MeshParts"] or (_G.Settings.Other and _G.Settings.Other["Low Quality MeshParts"]) or (_G.Settings.MeshParts and _G.Settings.MeshParts.LowerQuality) then
                Instance.RenderFidelity = 2
                Instance.Reflectance = 0
                Instance.Material = Enum.Material.Plastic
            end
            if _G.Settings["Invisible MeshParts"] or (_G.Settings.Other and _G.Settings.Other["Invisible MeshParts"]) or (_G.Settings.MeshParts and _G.Settings.MeshParts.Invisible) then
                Instance.Transparency = 1
                Instance.RenderFidelity = 2
                Instance.Reflectance = 0
                Instance.Material = Enum.Material.Plastic
            end
            if _G.Settings.MeshParts and _G.Settings.MeshParts.NoTexture then
                Instance.TextureID = ""
            end
            if _G.Settings.MeshParts and _G.Settings.MeshParts.NoMesh then
                Instance.MeshId = ""
            end
            if _G.Settings["No MeshParts"] or (_G.Settings.Other and _G.Settings.Other["No MeshParts"]) or (_G.Settings.MeshParts and _G.Settings.MeshParts.Destroy) then
                Instance:Destroy()
            end
        end
    end
end
if _G.SendNotifications then
    StarterGui:SetCore("SendNotification", {
        Title = "slapped",
        Text = "Loading FPS Booster...",
        Duration = math.huge,
        Button1 = "Okay"
    })
end
coroutine.wrap(pcall)(function()
    if (_G.Settings["Low Water Graphics"] or (_G.Settings.Other and _G.Settings.Other["Low Water Graphics"])) then
        if not workspace:FindFirstChildOfClass("Terrain") then
            repeat
                task.wait()
            until workspace:FindFirstChildOfClass("Terrain")
        end
        workspace:FindFirstChildOfClass("Terrain").WaterWaveSize = 0
        workspace:FindFirstChildOfClass("Terrain").WaterWaveSpeed = 0
        workspace:FindFirstChildOfClass("Terrain").WaterReflectance = 0
        workspace:FindFirstChildOfClass("Terrain").WaterTransparency = 0
        if sethiddenproperty then
            sethiddenproperty(workspace:FindFirstChildOfClass("Terrain"), "Decoration", false)
        else
            StarterGui:SetCore("SendNotification", {
                Title = "slapped",
                Text = "Your exploit does not support sethiddenproperty, please use a different exploit.",
                Duration = 5,
                Button1 = "Okay"
            })
            warn("Your exploit does not support sethiddenproperty, please use a different exploit.")
        end
        if _G.SendNotifications then
            StarterGui:SetCore("SendNotification", {
                Title = "slapped",
                Text = "Low Water Graphics Enabled",
                Duration = 5,
                Button1 = "Okay"
            })
        end
        if _G.ConsoleLogs then
            warn("Low Water Graphics Enabled")
        end
    end
end)
coroutine.wrap(pcall)(function()
    if _G.Settings["No Shadows"] or (_G.Settings.Other and _G.Settings.Other["No Shadows"]) then
        Lighting.GlobalShadows = false
        Lighting.FogEnd = 9e9
        Lighting.ShadowSoftness = 0
        if sethiddenproperty then
            sethiddenproperty(Lighting, "Technology", 2)
        else
            StarterGui:SetCore("SendNotification", {
                Title = "slapped",
                Text = "Your exploit does not support sethiddenproperty, please use a different exploit.",
                Duration = 5,
                Button1 = "Okay"
            })
            warn("Your exploit does not support sethiddenproperty, please use a different exploit.")
        end
        if _G.SendNotifications then
            StarterGui:SetCore("SendNotification", {
                Title = "slapped",
                Text = "No Shadows Enabled",
                Duration = 5,
                Button1 = "Okay"
            })
        end
        if _G.ConsoleLogs then
            warn("No Shadows Enabled")
        end
    end
end)
coroutine.wrap(pcall)(function()
    if _G.Settings["Low Rendering"] or (_G.Settings.Other and _G.Settings.Other["Low Rendering"]) then
        settings().Rendering.QualityLevel = 1
        settings().Rendering.MeshPartDetailLevel = Enum.MeshPartDetailLevel.Level04
        if _G.SendNotifications then
            StarterGui:SetCore("SendNotification", {
                Title = "slapped",
                Text = "Low Rendering Enabled",
                Duration = 5,
                Button1 = "Okay"
            })
        end
        if _G.ConsoleLogs then
            warn("Low Rendering Enabled")
        end
    end
end)
coroutine.wrap(pcall)(function()
    if _G.Settings["Reset Materials"] or (_G.Settings.Other and _G.Settings.Other["Reset Materials"]) then
        for i, v in pairs(MaterialService:GetChildren()) do
            v:Destroy()
        end
        MaterialService.Use2022Materials = false
        if _G.SendNotifications then
            StarterGui:SetCore("SendNotification", {
                Title = "slapped",
                Text = "Reset Materials Enabled",
                Duration = 5,
                Button1 = "Okay"
            })
        end
        if _G.ConsoleLogs then
            warn("Reset Materials Enabled")
        end
    end
end)
coroutine.wrap(pcall)(function()
    if _G.Settings["FPS Cap"] or (_G.Settings.Other and _G.Settings.Other["FPS Cap"]) then
        if setfpscap then
            if type(_G.Settings["FPS Cap"] or (_G.Settings.Other and _G.Settings.Other["FPS Cap"])) == "string" or type(_G.Settings["FPS Cap"] or (_G.Settings.Other and _G.Settings.Other["FPS Cap"])) == "number" then
                setfpscap(tonumber(_G.Settings["FPS Cap"] or (_G.Settings.Other and _G.Settings.Other["FPS Cap"])))
                if _G.SendNotifications then
                    StarterGui:SetCore("SendNotification", {
                        Title = "slapped",
                        Text = "FPS Capped to " .. tostring(_G.Settings["FPS Cap"] or (_G.Settings.Other and _G.Settings.Other["FPS Cap"])),
                        Duration = 5,
                        Button1 = "Okay"
                    })
                end
                if _G.ConsoleLogs then
                    warn("FPS Capped to " .. tostring(_G.Settings["FPS Cap"] or (_G.Settings.Other and _G.Settings.Other["FPS Cap"])))
                end
            elseif _G.Settings["FPS Cap"] or (_G.Settings.Other and _G.Settings.Other["FPS Cap"]) == true then
                setfpscap(1e6)
                if _G.SendNotifications then
                    StarterGui:SetCore("SendNotification", {
                        Title = "slapped",
                        Text = "FPS Uncapped",
                        Duration = 5,
                        Button1 = "Okay"
                    })
                end
                if _G.ConsoleLogs then
                    warn("FPS Uncapped")
                end
            end
        else
            StarterGui:SetCore("SendNotification", {
                Title = "slapped",
                Text = "FPS Cap Failed",
                Duration = math.huge,
                Button1 = "Okay"
            })
            warn("FPS Cap Failed")
        end
    end
end)
game.DescendantAdded:Connect(function(value)
    wait(_G.LoadedWait or 1)
    CheckIfBad(value)
end)
local Descendants = game:GetDescendants()
local StartNumber = _G.WaitPerAmount or 500
local WaitNumber = _G.WaitPerAmount or 500
if _G.SendNotifications then
    StarterGui:SetCore("SendNotification", {
        Title = "slapped",
        Text = "Checking " .. #Descendants .. " Instances...",
        Duration = 15,
        Button1 = "Okay"
    })
end
if _G.ConsoleLogs then
    warn("Checking " .. #Descendants .. " Instances...")
end
for i, v in pairs(Descendants) do
    CheckIfBad(v)
    if i == WaitNumber then
        task.wait()
        if _G.ConsoleLogs then
            print("Loaded " .. i .. "/" .. #Descendants)
        end
        WaitNumber = WaitNumber + StartNumber
    end
end
StarterGui:SetCore("SendNotification", {
    Title = "made by",
    Text = "SLAPPPED!",
    Duration = 10,
})
--game.DescendantAdded:Connect(CheckIfBad)
--[[game.DescendantAdded:Connect(function(value)
    CheckIfBad(value)
end)]]
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "hvh";
    Text = "press m for azure modded";
    })
    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(KeyPressed)
        if KeyPressed == "m" then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Actyrn/Scripts/main/AzureModded"))()
            wait (10)          
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "hvh";
        Text = "turn on anti lock and use 0.19 prediction for hvh";
        })
            end
    end)

        local function esp(part)
            local bgui = Instance.new('BillboardGui', part)
            local tlab = Instance.new('TextLabel', bgui)
        
            bgui.Name = "enemeyesp"
            bgui.Adornee = part
            bgui.AlwaysOnTop = true
            bgui.ExtentsOffset = Vector3.new(0, 1, 0)
            bgui.Size = UDim2.new(0, 5, 0, 5)
            
            tlab.Name = "rape"
            tlab.BackgroundColor3 = Color3.new(255,0, 0)
            tlab.BackgroundTransparency = 1
            tlab.BorderSizePixel = 0
            tlab.Position = UDim2.new(0, 0, 0, -40)
            tlab.Size = UDim2.new(1, 0, 10, 0)
            tlab.Visible = true
            tlab.ZIndex = 10
            tlab.Font = "ArialBold"
            tlab.FontSize = "Size14"
            tlab.Text = "slapped(owner)"
            tlab.TextColor3 = Color3.fromRGB(255,0,255)
            tlab.TextStrokeColor3 = Color3.fromRGB(0,0,0)
            tlab.TextStrokeTransparency = 0.6
        end
        
        game.Players.PlayerAdded:Connect(function(opp)
            if opp:IsInGroup(7891069) or opp:IsInGroup(7891069) then
                opp.CharacterAdded:Connect(function(char)
                    repeat wait() 
                    until char:FindFirstChild("Humanoid")
                    repeat wait() 
                    until char:FindFirstChild("Head")
                    esp(char:FindFirstChild("Head"))
                end)
            end
        end)
        
        for i, opp in pairs(game.Players:GetPlayers()) do
            if opp:IsInGroup(7891069) or opp:IsInGroup(7891069) then
                opp.CharacterAdded:Connect(function(char)
                    repeat wait() 
                    until char:FindFirstChild("Humanoid")
                    repeat wait() 
                    until char:FindFirstChild("Head")
                    esp(char:FindFirstChild("Head"))
                end)
            end
        end
		
local lplr = game:GetService("Players").LocalPlayer
local shotty = lplr:WaitForChild("Backpack"):WaitForChild("Shotty")
local plr = game:GetService('Players').LocalPlayer
shotty.Handle.Material = ("ForceField")
--shotty.Handle.Transparency = 0
--shotty.Clip.Transparency = 0
--shotty.Heh.Transparency = 0
--shotty.Barrel.Transparency = 0
--shotty.Union.Transparency = 0
shotty.Heh.Material = ("ForceField")
shotty.Clip.Material = ("ForceField")
shotty.Barrel.Material = ("ForceField")
shotty.Barrel.BrickColor = BrickColor.new("Royal purple")
shotty.Clip.BrickColor = BrickColor.new("Royal purple")
shotty.Handle.BrickColor = BrickColor.new("Royal purple")
shotty.Heh.BrickColor = BrickColor.new("Royal purple")
shotty.Union.BrickColor = BrickColor.new("Royal purple")
shotty.Union.Material = ("ForceField")
wait(0.001)
local Unions ={}for i,v in pairs(shotty:GetChildren())do if v.Name=="Union"then table.insert(Unions,v)end end
for i,Union in pairs(Unions)do  
Union.BrickColor = BrickColor.new("Royal purple")
Union.Material = "Granite"
Union.UsePartColor = true
end

local lplr = game:GetService("Players").LocalPlayer
local glock = lplr:WaitForChild("Backpack"):WaitForChild("Glock")
local plr = game:GetService('Players').LocalPlayer
glock.Handle.Material = ("ForceField")
--glock.Handle.Transparency = 0
--glock.Clip.Transparency = 0
--glock.Heh.Transparency = 0
--glock.Barrel.Transparency = 0
--glock.Union.Transparency = 0
glock.Heh.Material = ("ForceField")
glock.Barrel.Material = ("ForceField")
glock.Barrel.BrickColor = BrickColor.new("Royal purple")
glock.Handle.BrickColor = BrickColor.new("Royal purple")
glock.Heh.BrickColor = BrickColor.new("Royal purple")
glock.Union.BrickColor = BrickColor.new("Royal purple")
glock.Union.Material = ("ForceField")
wait(0.001)
local Unions ={}for i,v in pairs(glock:GetChildren())do if v.Name=="Union"then table.insert(Unions,v)end end
for i,Union in pairs(Unions)do  
Union.BrickColor = BrickColor.new("Royal purple")
Union.Material = "ForceField"
Union.UsePartColor = true
end

game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(c)
   local lplr = game:GetService("Players").LocalPlayer
local shotty = lplr:WaitForChild("Backpack"):WaitForChild("Shotty")
local plr = game:GetService('Players').LocalPlayer
shotty.Handle.Material = ("ForceField")
--shotty.Handle.Transparency = 0
--shotty.Clip.Transparency = 0
--shotty.Heh.Transparency = 0
--shotty.Barrel.Transparency = 0
--shotty.Union.Transparency = 0
shotty.Heh.Material = ("ForceField")
shotty.Clip.Material = ("ForceField")
shotty.Barrel.Material = ("ForceField")
shotty.Barrel.BrickColor = BrickColor.new("Royal purple")
shotty.Clip.BrickColor = BrickColor.new("Royal purple")
shotty.Handle.BrickColor = BrickColor.new("Royal purple")
shotty.Heh.BrickColor = BrickColor.new("Royal purple")
shotty.Union.BrickColor = BrickColor.new("Royal purple")
shotty.Union.Material = ("ForceField")
wait(0.001)
local Unions ={}for i,v in pairs(shotty:GetChildren())do if v.Name=="Union"then table.insert(Unions,v)end end
for i,Union in pairs(Unions)do  
Union.BrickColor = BrickColor.new("Royal purple")
Union.Material = "ForceField"
Union.UsePartColor = true
end

local lplr = game:GetService("Players").LocalPlayer
local glock = lplr:WaitForChild("Backpack"):WaitForChild("Glock")
local plr = game:GetService('Players').LocalPlayer
glock.Handle.Material = ("ForceField")
--glock.Handle.Transparency = 0
--glock.Clip.Transparency = 0
--glock.Heh.Transparency = 0
--glock.Barrel.Transparency = 0
--glock.Union.Transparency = 0
glock.Heh.Material = ("ForceField")
glock.Barrel.Material = ("ForceField")
glock.Barrel.BrickColor = BrickColor.new("Royal purple")
glock.Handle.BrickColor = BrickColor.new("Royal purple")
glock.Heh.BrickColor = BrickColor.new("Royal purple")
glock.Union.BrickColor = BrickColor.new("Royal purple")
glock.Union.Material = ("ForceField")
wait(0.001)
local Unions ={}for i,v in pairs(glock:GetChildren())do if v.Name=="Union"then table.insert(Unions,v)end end
for i,Union in pairs(Unions)do  
Union.BrickColor = BrickColor.new("Royal purple")
Union.Material = "ForceField"
Union.UsePartColor = true
end
end)
game:GetService("Players").LocalPlayer.Chatted:connect(function(msg)
    
if (string.lower(msg) == "+gunanims") then
local lplr = game:GetService("Players").LocalPlayer
local shotty = lplr.Backpack:FindFirstChild("Shotty")
local Animation = Instance.new("Animation")
Animation.AnimationId = "rbxassetid://889968874"
local plr = game:GetService('Players').LocalPlayer
local HUM = plr.Character.Humanoid:LoadAnimation(Animation)
shotty.Equipped:connect(function()
    wait(.1)
    HUM:Play()
    HUM:AdjustSpeed(0.0)
end)
shotty.Unequipped:connect(function()
    HUM:Stop()
end)
local lplr = game:GetService("Players").LocalPlayer
local Glock = lplr.Backpack:FindFirstChild("Glock")
local Animation = Instance.new("Animation")
Animation.AnimationId = "rbxassetid://889968874"
local plr = game:GetService('Players').LocalPlayer
local HUM = plr.Character.Humanoid:LoadAnimation(Animation)
Glock.Equipped:connect(function()
    wait(.1)
    HUM:Play()
    HUM:AdjustSpeed(0.0)
end)
Glock.Unequipped:connect(function()
    HUM:Stop()
end)
end
end)
local ScreenGui = Instance.new("ScreenGui")
local TextLabel = Instance.new("TextLabel")

ScreenGui.Parent = game.CoreGui

TextLabel.Parent = ScreenGui
TextLabel.BackgroundColor3 = Color3.fromRGB(rgb(rgb(255, 1, 1)))
TextLabel.BackgroundTransparency = 0.030
TextLabel.Position = UDim2.new(0.00374999992, 0, 0.16312997, 0)
TextLabel.Size = UDim2.new(0, 200, 0, 50)
TextLabel.Font = Enum.Font.Gotham
TextLabel.Text = "MADE BY SLAPPED"
TextLabel.TextColor3 = Color3.fromRGB(120,81,169)
TextLabel.TextSize = 24.000

local ScreenGui = Instance.new("ScreenGui")
local ClipsTxt = Instance.new("TextLabel")
local BulletsTxt = Instance.new("TextLabel")
ScreenGui.Parent = game.CoreGui
ClipsTxt.Name = "ClipsTxt"
ClipsTxt.Parent = ScreenGui
ClipsTxt.BackgroundColor3 = Color3.fromRGB(120,81,169)
ClipsTxt.BackgroundTransparency = 1.000
ClipsTxt.Position = UDim2.new(-0.015, 0, 0.620, 0)
ClipsTxt.Size = UDim2.new(0, 200, 0, 50)
ClipsTxt.Font = Enum.Font.Gotham
ClipsTxt.Text = "Clips:"
ClipsTxt.TextColor3 = Color3.fromRGB(120,81,169)
ClipsTxt.TextSize = 24.000
ClipsTxt.Visible = false

BulletsTxt.Name = "BulletsTxt"
BulletsTxt.Parent = ScreenGui
BulletsTxt.BackgroundColor3 = Color3.fromRGB(120,81,169)
BulletsTxt.BackgroundTransparency = 1.000
BulletsTxt.Position = UDim2.new(-0.015, 0, 0.600, 0)
BulletsTxt.Size = UDim2.new(0, 200, 0, 50)
BulletsTxt.Font = Enum.Font.Gotham
BulletsTxt.Text = "Bullets:"
BulletsTxt.TextColor3 = Color3.fromRGB(120,81,169)
BulletsTxt.TextSize = 24.000
BulletsTxt.Visible = false
game.Players.LocalPlayer.PlayerGui.HUD:FindFirstChild("Ammo"):Destroy()

function CustomAmmoUI()
local gunequipped = false
for _,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
	if v:IsA("Tool") then
        if v ~= nil then	
v.Equipped:Connect(function()
if v:FindFirstChild("Clips") and v:FindFirstChild("Ammo") then		
wait(.1)
ClipsTxt.Text = "Clips:"
BulletsTxt.Text = "Bullets:"		
gunequipped = true	
BulletsTxt.Visible = true
ClipsTxt.Visible = true
repeat	
BulletsTxt.Text = "Bullets: "..v:FindFirstChild("Ammo").Value..""
ClipsTxt.Text = "Clips: "..v:FindFirstChild("Clips").Value..""
game:GetService("RunService").Heartbeat:Wait()	
until gunequipped == false
else
return nil			
end				
end)
v.Unequipped:Connect(function()
ClipsTxt.Text = "Clips:"
BulletsTxt.Text = "Bullets:"
gunequipped = false	
BulletsTxt.Visible = false
ClipsTxt.Visible = false
end)
end			
end	
end	
end
CustomAmmoUI()
game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
game.Players.LocalPlayer.Character.Humanoid:UnequipTools()
end)
game.Players.LocalPlayer.CharacterAdded:Connect(function()	
local hud = game.Players.LocalPlayer.PlayerGui:WaitForChild("HUD")
hud.Ammo:Destroy()
wait(1)
CustomAmmoUI()	
end)
